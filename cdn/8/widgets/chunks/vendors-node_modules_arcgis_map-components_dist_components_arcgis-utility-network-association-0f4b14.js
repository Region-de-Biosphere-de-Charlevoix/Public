"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_arcgis_map-components_dist_components_arcgis-utility-network-association-0f4b14"],{

/***/ "./node_modules/@arcgis/map-components/dist/chunks/useWidget.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/chunks/useWidget.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   m: () => (/* binding */ P)
/* harmony export */ });
/* harmony import */ var _arcgis_components_controllers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @arcgis/components-controllers */ "./node_modules/@arcgis/components-controllers/dist/index.js");
/* harmony import */ var _arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @arcgis/components-controllers/accessor */ "./node_modules/@arcgis/components-controllers/dist/accessor/index.js");
/* harmony import */ var _component_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./component-utils.js */ "./node_modules/@arcgis/map-components/dist/chunks/component-utils.js");



/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
v4.32.1 */
const P = (d, s) => (i, e) => _(i, d, e);
class y extends _arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.AccessorController {
  constructor(s, i, e) {
    super(s, i, e), this._watchedViewModelProperties = /* @__PURE__ */ new Map(), this._watchedVisibleElementsProperties = {}, this._isBindingViewModel = { value: !0 }, Object.defineProperty(this.exports, "viewModel", {
      value: _arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.accessorSupport.makeGetterProxy(s, this._watchedViewModelProperties, this._isBindingViewModel)
    }), Object.defineProperty(this.exports, "visibleElements", {
      value: this._makeVisibleElementsBinder()
    });
  }
  hostConnected() {
    super.hostConnected(), this._isBindingViewModel.value = !1, this.component.manager.loadedCalled && (0,_component_utils_js__WEBPACK_IMPORTED_MODULE_2__.a)(this.component);
  }
  async hostLoad() {
    if (this._watchedProperties.delete("viewModel"), await super.hostLoad(), this.component.manager.destroyed)
      return;
    this._watchMetaProperties(), this.onLifecycle(() => this.reactiveUtils.watch(() => this._instance.viewModel, (e) => {
      this.component.viewModel = e;
    }, { initial: !0 }));
    const s = this._instance.viewModel;
    typeof s == "object" && (_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.accessorSupport.watchComponentUpdates(this, s, this._watchedViewModelProperties), _arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.accessorSupport.watchAccessorUpdates(this, s, this._watchedViewModelProperties));
    const i = Object.entries(this._watchedVisibleElementsProperties);
    i.length > 0 && this.onLifecycle(() => i.map(([e, t]) => {
      let n = this._instance.visibleElements ?? {}, o;
      for (const c of t.slice(0, -1))
        if (typeof n[c] == "object" && n[c] !== null)
          n = n[c];
        else {
          o = !!n[c];
          break;
        }
      o === void 0 && (o = !!(n[t.slice(-1)[0]] ?? !0)), e.startsWith("hide");
      const m = e.startsWith("hide") || e.startsWith("show") ? e.startsWith("hide") : o, h = this.component;
      return typeof h[e] == "boolean" ? this._updateWidgetVisibleElement(t, h[e], m) : h[e] = !1, (0,_arcgis_components_controllers__WEBPACK_IMPORTED_MODULE_0__.watch)(this.component, e, (c) => this._updateWidgetVisibleElement(t, c, m));
    }));
  }
  _updateWidgetVisibleElement(s, i, e) {
    let t = this._instance.visibleElements ?? {};
    for (const o of s.slice(0, -1))
      (typeof t[o] != "object" || t[o] === null) && (t[o] = {}), t = t[o];
    const n = !!(e ? !i : i);
    t[s.at(-1)] = n;
  }
  hostLoaded() {
    const { el: s } = this.component;
    s.childElem ??= document.createElement("div"), this._instance.container = s.childElem;
    let i = !1;
    const e = this.component.el.view;
    Object.defineProperty(this.component.el, "view", {
      get: () => this._instance.view ?? this._instance.viewModel?.view,
      set: (t) => {
        !("view" in this._instance) && typeof this._instance.viewModel == "object" ? this._instance.viewModel.view = t : this._instance.view = t, !("map" in this._instance) && typeof this._instance.viewModel == "object" ? this._instance.viewModel.map = t.map : this._instance.map = t.map, this._watchViewDestroy(), t && !i && (i = !0, this.component.arcgisReady.emit());
      },
      configurable: !0,
      enumerable: !0
    }), e && (this._instance.view = e), this.component.el.isConnected && ((0,_component_utils_js__WEBPACK_IMPORTED_MODULE_2__.a)(this.component), this._watchViewDestroy());
  }
  hostDisconnected() {
    typeof this.component.el.childElem == "object" && this.component.el.view?.ui?.remove(this.component.el.childElem);
  }
  hostDestroy() {
    super.hostDestroy(), this._watchViewDestroyHandle?.remove();
  }
  _watchMetaProperties() {
    (0,_arcgis_components_controllers__WEBPACK_IMPORTED_MODULE_0__.watch)(this.component, "position", (s) => {
      this.component.el.childElem != null && typeof s == "string" && (0,_component_utils_js__WEBPACK_IMPORTED_MODULE_2__.a)(this.component);
    }), (0,_arcgis_components_controllers__WEBPACK_IMPORTED_MODULE_0__.watch)(this.component, "referenceElement", () => (0,_component_utils_js__WEBPACK_IMPORTED_MODULE_2__.a)(this.component));
  }
  _makeVisibleElementsBinder() {
    return new Proxy({}, {
      has: (s, i) => typeof i == "string" || Reflect.has(s, i),
      get: (s, i) => {
        if (typeof i == "symbol" || i in Promise.prototype)
          return Reflect.get(s, i);
        const e = [i], t = this._makeRecursiveProxy(e);
        return (0,_arcgis_components_controllers__WEBPACK_IMPORTED_MODULE_0__.trackPropKey)(this.component, (n) => {
          const o = n;
          this.component[o] = !1, this._watchedVisibleElementsProperties[o] = e;
        }, t);
      }
    });
  }
  _makeRecursiveProxy(s) {
    const i = new Proxy({}, {
      get: (e, t) => {
        const n = Reflect.get(e, t);
        return typeof t == "symbol" || t in Promise.prototype ? n : (s.push(t), i);
      }
    });
    return i;
  }
  /**
   * Destroy the component if view gets destroyed.
   *
   * When view is destroyed, component disconnect is triggered, which will
   * destroy the component in 1s but that can be too late, because in the
   * meanwhile, a watcher on the widget/viewModel instance may get triggered,
   * and throw an error if it's not able to access this.view.map or etc
   * (happens in VersionManagementViewModel for example).
   *
   * We can't check for this in disconnectedCallback though as, if the entire
   * component tree is removed, the disconnect for the component will be
   * triggered before that of arcgis-map, so the view might not be destroyed
   * yet at that point.
   */
  _watchViewDestroy() {
    this._watchViewDestroyHandle?.remove(), this._watchViewDestroyHandle = this.reactiveUtils.when(() => this.component.el.view?.destroyed === !0, () => void this.component.destroy().catch(console.error), { sync: !0 });
  }
}
const _ = (0,_arcgis_components_controllers__WEBPACK_IMPORTED_MODULE_0__.proxyExports)(y);



/***/ }),

/***/ "./node_modules/@arcgis/map-components/dist/components/arcgis-utility-network-associations/customElement.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/components/arcgis-utility-network-associations/customElement.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ArcgisUtilityNetworkAssociations: () => (/* binding */ g)
/* harmony export */ });
/* harmony import */ var _chunks_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../chunks/runtime.js */ "./node_modules/@arcgis/map-components/dist/chunks/runtime.js");
/* harmony import */ var _arcgis_core_widgets_UtilityNetworkAssociations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @arcgis/core/widgets/UtilityNetworkAssociations.js */ "@arcgis/core/widgets/UtilityNetworkAssociations.js");
/* harmony import */ var _arcgis_lumina__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @arcgis/lumina */ "./node_modules/@arcgis/lumina/dist/index.js");
/* harmony import */ var _chunks_useWidget_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chunks/useWidget.js */ "./node_modules/@arcgis/map-components/dist/chunks/useWidget.js");




/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
v4.32.1 */
const S = (0,_chunks_useWidget_js__WEBPACK_IMPORTED_MODULE_3__.m)(_arcgis_core_widgets_UtilityNetworkAssociations_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
class g extends _arcgis_lumina__WEBPACK_IMPORTED_MODULE_2__.LitElement {
  constructor() {
    super(...arguments), this.widget = S(this), this.viewModel = this.widget.viewModel, this.autoDestroyDisabled = !1, this.autoRefreshAssociationsDisabled = this.widget.autoRefreshAssociations, this.connectivityAssociationsLineSymbol = this.widget.connectivityAssociationsLineSymbol, this.includeConnectivityAssociationsDisabled = this.widget.includeConnectivityAssociations, this.includeStructuralAttachmentAssociationsDisabled = this.widget.includeStructuralAttachmentAssociations, this.maxAllowableAssociations = this.widget.maxAllowableAssociations, this.maxAllowableAssociationsSliderMax = this.widget.maxAllowableAssociationsSliderMax, this.maxAllowableAssociationsSliderMin = this.widget.maxAllowableAssociationsSliderMin, this.maxAllowableAssociationsSliderStep = this.widget.maxAllowableAssociationsSliderStep, this.position = "bottom-left", this.showArrowsConnectivity = this.widget.showArrowsConnectivity, this.showArrowsStructuralAttachment = this.widget.showArrowsStructuralAttachment, this.showAssociationsEnabled = this.widget.showAssociationsEnabled, this.structuralAttachmentAssociationsLineSymbol = this.widget.structuralAttachmentAssociationsLineSymbol, this.utilityNetwork = this.widget.utilityNetwork, this.showConnectivityAssociationsSettingsArrowsToggle = this.widget.visibleElements.connectivityAssociationsSettings.arrowsToggle, this.visibleElementsConnectivityAssociationsSettingsArrowsToggle = !1, this.showConnectivityAssociationsSettingsCapSelect = this.widget.visibleElements.connectivityAssociationsSettings.capSelect, this.visibleElementsConnectivityAssociationsSettingsCapSelect = !1, this.hideConnectivityAssociationsSettingsColorPicker = this.widget.visibleElements.connectivityAssociationsSettings.colorPicker, this.visibleElementsConnectivityAssociationsSettingsColorPicker = !0, this.hideConnectivityAssociationsSettingsStylePicker = this.widget.visibleElements.connectivityAssociationsSettings.stylePicker, this.visibleElementsConnectivityAssociationsSettingsStylePicker = !0, this.hideConnectivityAssociationsSettingsWidthInput = this.widget.visibleElements.connectivityAssociationsSettings.widthInput, this.visibleElementsConnectivityAssociationsSettingsWidthInput = !0, this.showMaxAllowableAssociationsSlider = this.widget.visibleElements.maxAllowableAssociationsSlider, this.visibleElementsMaxAllowableAssociationsSlider = !1, this.showStructuralAttachmentAssociationsSettingsArrowsToggle = this.widget.visibleElements.structuralAttachmentAssociationsSettings.arrowsToggle, this.visibleElementsStructuralAttachmentAssociationsSettingsArrowsToggle = !1, this.showStructuralAttachmentAssociationsSettingsCapSelect = this.widget.visibleElements.structuralAttachmentAssociationsSettings.capSelect, this.visibleElementsStructuralAttachmentAssociationsSettingsCapSelect = !1, this.hideStructuralAttachmentAssociationsSettingsColorPicker = this.widget.visibleElements.structuralAttachmentAssociationsSettings.colorPicker, this.visibleElementsStructuralAttachmentAssociationsSettingsColorPicker = !0, this.hideStructuralAttachmentAssociationsSettingsStylePicker = this.widget.visibleElements.structuralAttachmentAssociationsSettings.stylePicker, this.visibleElementsStructuralAttachmentAssociationsSettingsStylePicker = !0, this.hideStructuralAttachmentAssociationsSettingsWidthInput = this.widget.visibleElements.structuralAttachmentAssociationsSettings.widthInput, this.visibleElementsStructuralAttachmentAssociationsSettingsWidthInput = !0, this.icon = this.widget.icon, this.label = this.widget.label, this.arcgisReady = (0,_arcgis_lumina__WEBPACK_IMPORTED_MODULE_2__.createEvent)();
  }
  static {
    this.properties = { autoDestroyDisabled: 5, autoRefreshAssociationsDisabled: 5, connectivityAssociationsLineSymbol: 0, includeConnectivityAssociationsDisabled: 5, includeStructuralAttachmentAssociationsDisabled: 5, maxAllowableAssociations: 9, maxAllowableAssociationsSliderMax: 9, maxAllowableAssociationsSliderMin: 9, maxAllowableAssociationsSliderStep: 9, position: 1, referenceElement: 1, showArrowsConnectivity: 5, showArrowsStructuralAttachment: 5, showAssociationsEnabled: 5, structuralAttachmentAssociationsLineSymbol: 0, utilityNetwork: 0, showConnectivityAssociationsSettingsArrowsToggle: 5, visibleElementsConnectivityAssociationsSettingsArrowsToggle: 5, showConnectivityAssociationsSettingsCapSelect: 5, visibleElementsConnectivityAssociationsSettingsCapSelect: 5, hideConnectivityAssociationsSettingsColorPicker: 5, visibleElementsConnectivityAssociationsSettingsColorPicker: 5, hideConnectivityAssociationsSettingsStylePicker: 5, visibleElementsConnectivityAssociationsSettingsStylePicker: 5, hideConnectivityAssociationsSettingsWidthInput: 5, visibleElementsConnectivityAssociationsSettingsWidthInput: 5, showMaxAllowableAssociationsSlider: 5, visibleElementsMaxAllowableAssociationsSlider: 5, showStructuralAttachmentAssociationsSettingsArrowsToggle: 5, visibleElementsStructuralAttachmentAssociationsSettingsArrowsToggle: 5, showStructuralAttachmentAssociationsSettingsCapSelect: 5, visibleElementsStructuralAttachmentAssociationsSettingsCapSelect: 5, hideStructuralAttachmentAssociationsSettingsColorPicker: 5, visibleElementsStructuralAttachmentAssociationsSettingsColorPicker: 5, hideStructuralAttachmentAssociationsSettingsStylePicker: 5, visibleElementsStructuralAttachmentAssociationsSettingsStylePicker: 5, hideStructuralAttachmentAssociationsSettingsWidthInput: 5, visibleElementsStructuralAttachmentAssociationsSettingsWidthInput: 5, icon: 1, label: 1 };
  }
  static {
    this.shadowRootOptions = _arcgis_lumina__WEBPACK_IMPORTED_MODULE_2__.noShadowRoot;
  }
  //#endregion
  //#region Public Methods
  /** Permanently destroy the component */
  async destroy() {
    await this.manager.destroy();
  }
  //#endregion
  //#region Lifecycle
  async load() {
    if (this.el.view?.map && this.el.view.map.portalItem) {
      await this.el.view.map.load();
      const t = this.el.view.map.utilityNetworks?.getItemAt(0);
      await t?.load(), this.utilityNetwork = t;
    }
  }
  willUpdate(t) {
    this._handleVisibilityChange(t, "ConnectivityAssociationsSettingsArrowsToggle"), this._handleVisibilityChange(t, "ConnectivityAssociationsSettingsCapSelect"), this._handleVisibilityChange(t, "ConnectivityAssociationsSettingsColorPicker"), this._handleVisibilityChange(t, "ConnectivityAssociationsSettingsStylePicker"), this._handleVisibilityChange(t, "ConnectivityAssociationsSettingsWidthInput"), this._handleVisibilityChange(t, "MaxAllowableAssociationsSlider"), this._handleVisibilityChange(t, "StructuralAttachmentAssociationsSettingsArrowsToggle"), this._handleVisibilityChange(t, "StructuralAttachmentAssociationsSettingsCapSelect"), this._handleVisibilityChange(t, "StructuralAttachmentAssociationsSettingsStylePicker"), this._handleVisibilityChange(t, "StructuralAttachmentAssociationsSettingsWidthInput");
  }
  //#endregion
  //#region Private Methods
  _handleVisibilityChange(t, n) {
    const s = `show${n}`, o = `hide${n}`, e = `visibleElements${n}`, i = this;
    t.has(s) ? i[e] = !!i[s] : t.has(o) ? i[e] = !i[o] : t.has(e) && (console.warn(`${this.el.tagName.toLowerCase()}: The property ${e} is deprecated. Use ${s in i ? s : o} instead.`), s in i ? i[s] = !!i[e] : o in i && (i[o] = !i[e]));
  }
}
(0,_chunks_runtime_js__WEBPACK_IMPORTED_MODULE_0__.c)("arcgis-utility-network-associations", g);



/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,