"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_arcgis_map-components_dist_components_arcgis-feature-table_customElement_js"],{

/***/ "./node_modules/@arcgis/map-components/dist/chunks/useWidget.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/chunks/useWidget.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   m: () => (/* binding */ P)
/* harmony export */ });
/* harmony import */ var _arcgis_components_controllers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @arcgis/components-controllers */ "./node_modules/@arcgis/components-controllers/dist/index.js");
/* harmony import */ var _arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @arcgis/components-controllers/accessor */ "./node_modules/@arcgis/components-controllers/dist/accessor/index.js");
/* harmony import */ var _component_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./component-utils.js */ "./node_modules/@arcgis/map-components/dist/chunks/component-utils.js");



/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
v4.32.1 */
const P = (d, s) => (i, e) => _(i, d, e);
class y extends _arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.AccessorController {
  constructor(s, i, e) {
    super(s, i, e), this._watchedViewModelProperties = /* @__PURE__ */ new Map(), this._watchedVisibleElementsProperties = {}, this._isBindingViewModel = { value: !0 }, Object.defineProperty(this.exports, "viewModel", {
      value: _arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.accessorSupport.makeGetterProxy(s, this._watchedViewModelProperties, this._isBindingViewModel)
    }), Object.defineProperty(this.exports, "visibleElements", {
      value: this._makeVisibleElementsBinder()
    });
  }
  hostConnected() {
    super.hostConnected(), this._isBindingViewModel.value = !1, this.component.manager.loadedCalled && (0,_component_utils_js__WEBPACK_IMPORTED_MODULE_2__.a)(this.component);
  }
  async hostLoad() {
    if (this._watchedProperties.delete("viewModel"), await super.hostLoad(), this.component.manager.destroyed)
      return;
    this._watchMetaProperties(), this.onLifecycle(() => this.reactiveUtils.watch(() => this._instance.viewModel, (e) => {
      this.component.viewModel = e;
    }, { initial: !0 }));
    const s = this._instance.viewModel;
    typeof s == "object" && (_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.accessorSupport.watchComponentUpdates(this, s, this._watchedViewModelProperties), _arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.accessorSupport.watchAccessorUpdates(this, s, this._watchedViewModelProperties));
    const i = Object.entries(this._watchedVisibleElementsProperties);
    i.length > 0 && this.onLifecycle(() => i.map(([e, t]) => {
      let n = this._instance.visibleElements ?? {}, o;
      for (const c of t.slice(0, -1))
        if (typeof n[c] == "object" && n[c] !== null)
          n = n[c];
        else {
          o = !!n[c];
          break;
        }
      o === void 0 && (o = !!(n[t.slice(-1)[0]] ?? !0)), e.startsWith("hide");
      const m = e.startsWith("hide") || e.startsWith("show") ? e.startsWith("hide") : o, h = this.component;
      return typeof h[e] == "boolean" ? this._updateWidgetVisibleElement(t, h[e], m) : h[e] = !1, (0,_arcgis_components_controllers__WEBPACK_IMPORTED_MODULE_0__.watch)(this.component, e, (c) => this._updateWidgetVisibleElement(t, c, m));
    }));
  }
  _updateWidgetVisibleElement(s, i, e) {
    let t = this._instance.visibleElements ?? {};
    for (const o of s.slice(0, -1))
      (typeof t[o] != "object" || t[o] === null) && (t[o] = {}), t = t[o];
    const n = !!(e ? !i : i);
    t[s.at(-1)] = n;
  }
  hostLoaded() {
    const { el: s } = this.component;
    s.childElem ??= document.createElement("div"), this._instance.container = s.childElem;
    let i = !1;
    const e = this.component.el.view;
    Object.defineProperty(this.component.el, "view", {
      get: () => this._instance.view ?? this._instance.viewModel?.view,
      set: (t) => {
        !("view" in this._instance) && typeof this._instance.viewModel == "object" ? this._instance.viewModel.view = t : this._instance.view = t, !("map" in this._instance) && typeof this._instance.viewModel == "object" ? this._instance.viewModel.map = t.map : this._instance.map = t.map, this._watchViewDestroy(), t && !i && (i = !0, this.component.arcgisReady.emit());
      },
      configurable: !0,
      enumerable: !0
    }), e && (this._instance.view = e), this.component.el.isConnected && ((0,_component_utils_js__WEBPACK_IMPORTED_MODULE_2__.a)(this.component), this._watchViewDestroy());
  }
  hostDisconnected() {
    typeof this.component.el.childElem == "object" && this.component.el.view?.ui?.remove(this.component.el.childElem);
  }
  hostDestroy() {
    super.hostDestroy(), this._watchViewDestroyHandle?.remove();
  }
  _watchMetaProperties() {
    (0,_arcgis_components_controllers__WEBPACK_IMPORTED_MODULE_0__.watch)(this.component, "position", (s) => {
      this.component.el.childElem != null && typeof s == "string" && (0,_component_utils_js__WEBPACK_IMPORTED_MODULE_2__.a)(this.component);
    }), (0,_arcgis_components_controllers__WEBPACK_IMPORTED_MODULE_0__.watch)(this.component, "referenceElement", () => (0,_component_utils_js__WEBPACK_IMPORTED_MODULE_2__.a)(this.component));
  }
  _makeVisibleElementsBinder() {
    return new Proxy({}, {
      has: (s, i) => typeof i == "string" || Reflect.has(s, i),
      get: (s, i) => {
        if (typeof i == "symbol" || i in Promise.prototype)
          return Reflect.get(s, i);
        const e = [i], t = this._makeRecursiveProxy(e);
        return (0,_arcgis_components_controllers__WEBPACK_IMPORTED_MODULE_0__.trackPropKey)(this.component, (n) => {
          const o = n;
          this.component[o] = !1, this._watchedVisibleElementsProperties[o] = e;
        }, t);
      }
    });
  }
  _makeRecursiveProxy(s) {
    const i = new Proxy({}, {
      get: (e, t) => {
        const n = Reflect.get(e, t);
        return typeof t == "symbol" || t in Promise.prototype ? n : (s.push(t), i);
      }
    });
    return i;
  }
  /**
   * Destroy the component if view gets destroyed.
   *
   * When view is destroyed, component disconnect is triggered, which will
   * destroy the component in 1s but that can be too late, because in the
   * meanwhile, a watcher on the widget/viewModel instance may get triggered,
   * and throw an error if it's not able to access this.view.map or etc
   * (happens in VersionManagementViewModel for example).
   *
   * We can't check for this in disconnectedCallback though as, if the entire
   * component tree is removed, the disconnect for the component will be
   * triggered before that of arcgis-map, so the view might not be destroyed
   * yet at that point.
   */
  _watchViewDestroy() {
    this._watchViewDestroyHandle?.remove(), this._watchViewDestroyHandle = this.reactiveUtils.when(() => this.component.el.view?.destroyed === !0, () => void this.component.destroy().catch(console.error), { sync: !0 });
  }
}
const _ = (0,_arcgis_components_controllers__WEBPACK_IMPORTED_MODULE_0__.proxyExports)(y);



/***/ }),

/***/ "./node_modules/@arcgis/map-components/dist/components/arcgis-feature-table/customElement.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/components/arcgis-feature-table/customElement.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ArcgisFeatureTable: () => (/* binding */ b)
/* harmony export */ });
/* harmony import */ var _chunks_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../chunks/runtime.js */ "./node_modules/@arcgis/map-components/dist/chunks/runtime.js");
/* harmony import */ var _arcgis_components_controllers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @arcgis/components-controllers */ "./node_modules/@arcgis/components-controllers/dist/index.js");
/* harmony import */ var _arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @arcgis/components-controllers/accessor */ "./node_modules/@arcgis/components-controllers/dist/accessor/index.js");
/* harmony import */ var _arcgis_core_layers_Layer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @arcgis/core/layers/Layer.js */ "@arcgis/core/layers/Layer.js");
/* harmony import */ var _arcgis_core_widgets_FeatureTable_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @arcgis/core/widgets/FeatureTable.js */ "@arcgis/core/widgets/FeatureTable.js");
/* harmony import */ var _arcgis_lumina__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @arcgis/lumina */ "./node_modules/@arcgis/lumina/dist/index.js");
/* harmony import */ var _chunks_useWidget_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../chunks/useWidget.js */ "./node_modules/@arcgis/map-components/dist/chunks/useWidget.js");
/* harmony import */ var _chunks_component_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../chunks/component-utils.js */ "./node_modules/@arcgis/map-components/dist/chunks/component-utils.js");
/* harmony import */ var _lit_reactive_element_css_tag_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @lit/reactive-element/css-tag.js */ "./node_modules/@lit/reactive-element/development/css-tag.js");









/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
v4.32.1 */
const u = (0,_lit_reactive_element_css_tag_js__WEBPACK_IMPORTED_MODULE_8__.css)`@layer{arcgis-feature-table{display:block}.arcgis-feature-table{width:100%;height:100%}}`, w = (0,_chunks_useWidget_js__WEBPACK_IMPORTED_MODULE_6__.m)(_arcgis_core_widgets_FeatureTable_js__WEBPACK_IMPORTED_MODULE_4__["default"]);
class b extends _arcgis_lumina__WEBPACK_IMPORTED_MODULE_5__.LitElement {
  constructor() {
    super(...arguments), this.widget = w(this), this.viewModel = this.widget.viewModel, this.attributeTableTemplate = this.widget.attributeTableTemplate, this.actionColumnConfig = this.widget.actionColumnConfig, this.activeFilters = this.widget.activeFilters, this.activeSortOrders = this.widget.activeSortOrders, this.allRelatedTablesVisible = this.widget.allRelatedTablesVisible, this.attachmentsEnabled = this.widget.attachmentsEnabled, this.autoDestroyDisabled = !1, this.autoRefreshDisabled = this.widget.autoRefreshEnabled, this.columnReorderingDisabled = this.widget.columnReorderingEnabled, this.columns = this.widget.columns, this.description = this.widget.description, this.editingEnabled = this.widget.editingEnabled, this.effectiveSize = this.widget.effectiveSize, this.filterBySelectionEnabled = this.widget.filterBySelectionEnabled, this.filterGeometry = this.widget.filterGeometry, this.hideColumnDescriptions = this.widget.visibleElements.columnDescriptions, this.hiddenFields = this.widget.hiddenFields, this.hideColumnMenuItemsSortAscending = this.widget.visibleElements.columnMenuItems.sortAscending, this.hideColumnMenuItemsSortDescending = this.widget.visibleElements.columnMenuItems.sortDescending, this.hideColumnMenus = this.widget.visibleElements.columnMenus, this.hideHeader = this.widget.visibleElements.header, this.hideMenu = this.widget.visibleElements.menu, this.hideMenuItemsClearSelection = this.widget.visibleElements.menuItems.clearSelection, this.hideMenuItemsDeleteSelection = this.widget.visibleElements.menuItems.deleteSelection, this.hideMenuItemsExportSelectionToCsv = this.widget.visibleElements.menuItems.exportSelectionToCSV, this.hideMenuItemsRefreshData = this.widget.visibleElements.menuItems.refreshData, this.hideMenuItemsSelectedRecordsShowAllToggle = this.widget.visibleElements.menuItems.selectedRecordsShowAllToggle, this.hideMenuItemsSelectedRecordsShowSelectedToggle = this.widget.visibleElements.menuItems.selectedRecordsShowSelectedToggle, this.hideMenuItemsToggleColumns = this.widget.visibleElements.menuItems.toggleColumns, this.hideMenuItemsZoomToSelection = this.widget.visibleElements.menuItems.zoomToSelection, this.hideProgress = this.widget.visibleElements.progress, this.hideSelectionColumn = this.widget.visibleElements.selectionColumn, this.hideTooltips = this.widget.visibleElements.tooltips, this.highlightDisabled = this.widget.highlightEnabled, this.highlightIds = this.widget.highlightIds, this.initialSize = this.widget.initialSize, this.icon = this.widget.icon, this.isQueryingOrSyncing = this.widget.isQueryingOrSyncing, this.label = this.widget.label, this.layer = this.widget.layer, this.layerView = this.widget.layerView, this.layers = this.widget.layers, this.maxSize = this.widget.maxSize, this.menuConfig = this.widget.menuConfig, this.multipleSelectionDisabled = this.widget.multipleSelectionEnabled, this.multipleSortEnabled = this.widget.multiSortEnabled, this.objectIds = this.widget.objectIds, this.outFields = this.widget.outFields, this.pageCount = this.widget.pageCount, this.pageIndex = this.widget.pageIndex, this.pageSize = this.widget.pageSize, this.paginationEnabled = this.widget.paginationEnabled, this.position = "manual", this.relatedRecordsEnabled = this.widget.relatedRecordsEnabled, this.relatedTable = this.widget.relatedTable, this.relatedTables = this.widget.relatedTables, this.returnGeometryEnabled = this.widget.returnGeometryEnabled, this.returnMEnabled = this.widget.returnMEnabled, this.returnZEnabled = this.widget.returnZEnabled, this.rowHighlightIds = this.widget.rowHighlightIds, this.size = this.widget.size, this.showLayerDropdown = this.widget.visibleElements.layerDropdown, this.state = this.widget.state, this.tableController = this.widget.tableController, this.tableDisabled = this.widget.disabled, this.tableParent = this.widget.tableParent, this.tableTemplate = this.widget.tableTemplate, this.timeExtent = this.widget.timeExtent, this.timeZone = this.widget.timeZone, this.arcgisCellClick = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_2__.reEmitEvent)(() => this.widget, "cell-click"), this.arcgisCellKeydown = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_2__.reEmitEvent)(() => this.widget, "cell-keydown"), this.arcgisCellPointerout = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_2__.reEmitEvent)(() => this.widget, "cell-pointerout"), this.arcgisCellPointerover = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_2__.reEmitEvent)(() => this.widget, "cell-pointerover"), this.arcgisColumnReorder = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_2__.reEmitEvent)(() => this.widget, "column-reorder"), this.arcgisPropertyChange = (0,_arcgis_components_controllers__WEBPACK_IMPORTED_MODULE_1__.usePropertyChange)()("effectiveSize", "isQueryingOrSyncing", "layerView", "size", "state"), this.arcgisReady = (0,_arcgis_lumina__WEBPACK_IMPORTED_MODULE_5__.createEvent)(), this.arcgisSelectionChange = (0,_arcgis_lumina__WEBPACK_IMPORTED_MODULE_5__.createEvent)();
  }
  static {
    this.properties = { attributeTableTemplate: 0, actionColumnConfig: 0, activeFilters: 0, activeSortOrders: 0, allRelatedTablesVisible: 4, attachmentsEnabled: 5, autoDestroyDisabled: 5, autoRefreshDisabled: 5, columnReorderingDisabled: 5, columns: 0, description: 1, editingEnabled: 5, effectiveSize: 8, filterBySelectionEnabled: 5, filterGeometry: 0, hideColumnDescriptions: 5, hiddenFields: 0, hideColumnMenuItemsSortAscending: 5, hideColumnMenuItemsSortDescending: 5, hideColumnMenus: 5, hideHeader: 5, hideMenu: 5, hideMenuItemsClearSelection: 5, hideMenuItemsDeleteSelection: 5, hideMenuItemsExportSelectionToCsv: 5, hideMenuItemsRefreshData: 5, hideMenuItemsSelectedRecordsShowAllToggle: 5, hideMenuItemsSelectedRecordsShowSelectedToggle: 5, hideMenuItemsToggleColumns: 5, hideMenuItemsZoomToSelection: 5, hideProgress: 5, hideSelectionColumn: 5, hideTooltips: 5, highlightDisabled: 5, highlightIds: 0, initialSize: 9, icon: 1, isQueryingOrSyncing: 4, label: 1, layer: 0, layerItemId: 1, layerUrl: 1, layerView: 0, layers: 0, maxSize: 9, menuConfig: 0, multipleSelectionDisabled: 5, multipleSortEnabled: 5, objectIds: 0, outFields: 0, pageCount: 8, pageIndex: 9, pageSize: 9, paginationEnabled: 5, position: 1, referenceElement: 1, relatedRecordsEnabled: 5, relatedTable: 0, relatedTables: 0, returnGeometryEnabled: 5, returnMEnabled: 5, returnZEnabled: 5, rowHighlightIds: 0, size: 8, showLayerDropdown: 5, state: 3, tableController: 0, tableDisabled: 5, tableParent: 0, tableTemplate: 0, timeExtent: 0, timeZone: 1 };
  }
  static {
    this.shadowRootOptions = _arcgis_lumina__WEBPACK_IMPORTED_MODULE_5__.noShadowRoot;
  }
  static {
    this.styles = u;
  }
  // #endregion
  // #region Public Methods
  async deleteSelection(e) {
    await this.widget?.deleteSelection(e);
  }
  /** Permanently destroy the component */
  async destroy() {
    await this.manager.destroy();
  }
  async exportSelectionToCSV(e) {
    await this.widget?.exportSelectionToCSV(e);
  }
  async findColumn(e) {
    return this.widget?.findColumn(e);
  }
  async goToPage(e) {
    this.widget.goToPage(e);
  }
  async hideColumn(e) {
    this.widget?.hideColumn(e);
  }
  async nextPage() {
    this.widget.nextPage();
  }
  async previousPage() {
    this.widget.previousPage();
  }
  async refresh() {
    await this.widget?.refresh();
  }
  async scrollToBottom() {
    this.widget.scrollToBottom();
  }
  async scrollToIndex(e) {
    this.widget?.scrollToIndex(e);
  }
  async scrollToLeft() {
    this.widget.scrollLeft();
  }
  async scrollToRow(e) {
    this.widget?.scrollToRow(e);
  }
  async scrollToTop() {
    this.widget.scrollToTop();
  }
  async showAllColumns() {
    this.widget?.showAllColumns();
  }
  async showColumn(e) {
    this.widget?.showColumn(e);
  }
  async sortColumn(e, t) {
    this.widget?.sortColumn(e, t);
  }
  async zoomToSelection() {
    this.widget?.zoomToSelection();
  }
  // #endregion
  // #region Lifecycle
  load() {
    this.manager.onLifecycle(() => this.widget.highlightIds.on("change", this.arcgisSelectionChange.emit));
  }
  willUpdate(e) {
    if (e.has("layerItemId") && ((0,_chunks_component_utils_js__WEBPACK_IMPORTED_MODULE_7__.f)(this.layerItemId) ? this.layer = null : this.layerItemId && _arcgis_core_layers_Layer_js__WEBPACK_IMPORTED_MODULE_3__["default"].fromPortalItem({
      portalItem: {
        id: this.layerItemId
      }
    }).then((t) => {
      this.layer = t;
    }).catch(console.error)), e.has("layerUrl")) {
      const t = this.layerUrl;
      t ? _arcgis_core_layers_Layer_js__WEBPACK_IMPORTED_MODULE_3__["default"].fromArcGISServerUrl({
        url: t
      }).then((o) => {
        this.layer = o;
      }).catch(console.error) : this.layer = null;
    }
  }
  loaded() {
    this.el.childElem?.classList.add("arcgis-feature-table");
  }
}
(0,_chunks_runtime_js__WEBPACK_IMPORTED_MODULE_0__.c)("arcgis-feature-table", b);



/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,