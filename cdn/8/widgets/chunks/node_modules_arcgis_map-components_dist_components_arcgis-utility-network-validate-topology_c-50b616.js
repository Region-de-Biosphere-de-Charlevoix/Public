"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["node_modules_arcgis_map-components_dist_components_arcgis-utility-network-validate-topology_c-50b616"],{

/***/ "./node_modules/@arcgis/map-components/dist/chunks/component-utils.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/chunks/component-utils.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   a: () => (/* binding */ p),
/* harmony export */   b: () => (/* binding */ P),
/* harmony export */   c: () => (/* binding */ H),
/* harmony export */   d: () => (/* binding */ L),
/* harmony export */   e: () => (/* binding */ O),
/* harmony export */   f: () => (/* binding */ x),
/* harmony export */   i: () => (/* binding */ N),
/* harmony export */   p: () => (/* binding */ u),
/* harmony export */   r: () => (/* binding */ S)
/* harmony export */ });
/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
v4.32.1 */
function P(e, i) {
  Array.isArray(i) ? e._watchHandles = [...e._watchHandles, ...i] : e._watchHandles.push(i);
}
function p(e) {
  e.el.childElem && (e.el.childElem.ownedBy = e.el);
  const i = h(e);
  if (!i) {
    const t = y(e.referenceElement);
    if (!t) {
      g(e);
      return;
    }
    return f(t, e, !0), t;
  }
  return w(i, e.el.parent) || (e.el.parent = i, i.tagName.toLowerCase() === "arcgis-expand" ? v(i, e) : i.tagName.toLowerCase() === "arcgis-placement" ? C(i, e) : f(i, e, !1)), i;
}
function h({ el: e }) {
  for (let i = e.parentElement; i; i = i?.parentElement ?? null) {
    if (c.has(i.tagName.toLowerCase()))
      return i;
    if ("ownedBy" in i && i.ownedBy instanceof HTMLElement && c.has(i.ownedBy.tagName.toLowerCase()))
      return i.ownedBy;
  }
}
const c = /* @__PURE__ */ new Set([
  "arcgis-map",
  "arcgis-scene",
  "arcgis-link-chart",
  "arcgis-expand",
  "arcgis-placement"
]);
function w(e, i) {
  if (e !== i)
    return !1;
  const t = e.tagName.toLowerCase();
  return t === "arcgis-expand" || t === "arcgis-placement";
}
function l(e, i, t = "arcgisReady") {
  const r = e;
  if (typeof r.view?.ready == "boolean")
    i(r.view);
  else {
    let s = function(d) {
      d.target === e && (l(e, i, t), e.removeEventListener(t, s));
    };
    e.addEventListener(t, s);
  }
}
const v = (e, i) => l(e, (t) => {
  i.el.childElem && e.content != null && e.content.append(i.el.childElem), e.expandIcon = i.icon || i.widget?.icon || e.expandIcon, i.position = e.position, i.el.view = t;
}), C = (e, i) => l(e, (t) => {
  i.el.childElem && i.el.append(i.el.childElem), i.position = e.position, i.el.view = t;
}), f = (e, i, t) => l(
  e,
  (r) => {
    t ? g(i) : i.el.childElem && E(e, i), i.el.view = r;
  },
  "arcgisViewReadyChange"
);
function E(e, i) {
  const t = i.el.childElem ?? i.el, r = [...e.children], s = {};
  for (const a of r) {
    const n = a.getAttribute("position") ?? "manual";
    s[n] ??= [], s[n].push({ child: a, position: n, index: r.indexOf(a) });
  }
  const d = s[i.position ?? "manual"]?.findIndex(({ child: a }) => a === i.el), o = e.view.ui;
  o.remove(t), o.add(t, { position: i.position, index: d });
}
function L(e) {
  let i = !1, t = e.el.view;
  const r = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(e.el), "view") ?? {
    get: () => t,
    set: (s) => t = s
  };
  Object.defineProperty(e.el, "view", {
    get: r.get.bind(e.el),
    set: (s) => {
      r.set.call(e.el, s), s && !i && (i = !0, e.arcgisReady.emit());
    },
    configurable: !0,
    enumerable: !0
  }), t && (e.el.view = t);
}
function x(e) {
  return e == null || e === "";
}
function H(e, i) {
  return i != null && e?.position === i.position && e?.heading === i.heading && e?.tilt === i.tilt && e?.fov === i.fov;
}
function N(e, i) {
  return i === void 0 || e?.targetGeometry !== i?.targetGeometry || e?.rotation !== i?.rotation || e?.scale !== i?.scale;
}
function O(e, i) {
  return u(i?.center, e);
}
function u(e, i) {
  if (typeof i == "string")
    return u(e, i.split(",").map(Number));
  if (!e)
    return i;
  if (Array.isArray(i)) {
    const t = i[0], r = i[1], s = i.length > 2 ? i[2] : void 0;
    if (t !== e.longitude || r !== e.latitude || s !== e.z)
      return i;
  } else if (i && !e?.equals(i))
    return i;
}
async function S(e, i) {
  i != null && (typeof i == "string" ? e.el.view = await b(i) : e.widget && (e.el.view = i.view));
}
async function b(e) {
  const i = y(e);
  return await new Promise((t) => {
    typeof i?.view?.ready == "boolean" ? t(i.view) : i && i.addEventListener("arcgisViewReadyChange", () => t(i.view), { once: !0 });
  });
}
function g(e) {
  e.el.childElem && (e.el.shadowRoot ?? e.el).append(e.el.childElem);
}
function y(e) {
  return typeof e != "string" ? e ?? void 0 : (e.includes("#") || e.includes(".") || e.includes("[") ? void 0 : document.querySelector(`#${e}`)) ?? document.querySelector(e) ?? void 0;
}



/***/ }),

/***/ "./node_modules/@arcgis/map-components/dist/chunks/disconnected.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/chunks/disconnected.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   o: () => (/* binding */ a)
/* harmony export */ });
/* harmony import */ var _arcgis_components_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @arcgis/components-utils */ "./node_modules/@arcgis/components-utils/dist/index.js");

/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
v4.32.1 */
function a(i) {
  i.el.childElem ? i.el.isConnected || (i.view?.ui ? i.view.ui.remove(i.el.childElem) : i.widget?.view && i.widget.view.ui.remove(i.el.childElem), i._watchHandles && i._watchHandles.forEach((o) => {
    o.remove();
  }), i._watchHandles = [], i.widget?.destroy()) : (0,_arcgis_components_utils__WEBPACK_IMPORTED_MODULE_0__.devToolsAwareTimeout)(() => {
    i.el.isConnected || (i.view?.ui ? i.view.ui.remove(i.el) : i.widget?.view && i.widget.view.ui.remove(i.el), i._watchHandles && i._watchHandles.forEach((o) => {
      o.remove();
    }), i._watchHandles = [], i.widget?.destroy());
  }, 1e3);
}



/***/ }),

/***/ "./node_modules/@arcgis/map-components/dist/components/arcgis-utility-network-validate-topology/customElement.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/components/arcgis-utility-network-validate-topology/customElement.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ArcgisUtilityNetworkValidateTopology: () => (/* binding */ m)
/* harmony export */ });
/* harmony import */ var _chunks_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../chunks/runtime.js */ "./node_modules/@arcgis/map-components/dist/chunks/runtime.js");
/* harmony import */ var lit_html_directives_ref_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit-html/directives/ref.js */ "./node_modules/lit-html/development/directives/ref.js");
/* harmony import */ var _arcgis_core_widgets_UtilityNetworkValidateTopology_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @arcgis/core/widgets/UtilityNetworkValidateTopology.js */ "@arcgis/core/widgets/UtilityNetworkValidateTopology.js");
/* harmony import */ var _chunks_component_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chunks/component-utils.js */ "./node_modules/@arcgis/map-components/dist/chunks/component-utils.js");
/* harmony import */ var _chunks_disconnected_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../chunks/disconnected.js */ "./node_modules/@arcgis/map-components/dist/chunks/disconnected.js");
/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lit */ "./node_modules/lit/index.js");
/* harmony import */ var _arcgis_lumina__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @arcgis/lumina */ "./node_modules/@arcgis/lumina/dist/index.js");







/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
v4.32.1 */
class m extends _arcgis_lumina__WEBPACK_IMPORTED_MODULE_6__.LitElement {
  constructor() {
    super(...arguments), this._watchHandles = [], this.extentToValidate = "current", this.position = "bottom-left", this.arcgisReady = (0,_arcgis_lumina__WEBPACK_IMPORTED_MODULE_6__.createEvent)();
  }
  static {
    this.properties = { extentToValidate: 1, position: 1, referenceElement: 1, utilityNetwork: 0, view: 0, widget: 0 };
  }
  static {
    this.shadowRootOptions = _arcgis_lumina__WEBPACK_IMPORTED_MODULE_6__.noShadowRoot;
  }
  // #endregion
  // #region Lifecycle
  willUpdate(t) {
    t.has("referenceElement") && this.referenceElementWatcher(this.referenceElement), t.has("extentToValidate") && this.extentToValidateWatcher(this.extentToValidate), t.has("utilityNetwork") && this.utilityNetworkWatcher(this.utilityNetwork), t.has("position") && this.positionWatcher(this.position), t.has("view") && this.viewWatcher(this.view);
  }
  async loaded() {
    const t = this._createParams(), i = new _arcgis_core_widgets_UtilityNetworkValidateTopology_js__WEBPACK_IMPORTED_MODULE_2__["default"](t);
    this.widget = i, this._addContainer(), (0,_chunks_component_utils_js__WEBPACK_IMPORTED_MODULE_3__.d)(this), (0,_chunks_component_utils_js__WEBPACK_IMPORTED_MODULE_3__.a)(this);
  }
  disconnectedCallback() {
    super.disconnectedCallback(), (0,_chunks_disconnected_js__WEBPACK_IMPORTED_MODULE_4__.o)(this);
  }
  // #endregion
  // #region Private Methods
  referenceElementWatcher(t) {
    (0,_chunks_component_utils_js__WEBPACK_IMPORTED_MODULE_3__.r)(this, t);
  }
  extentToValidateWatcher(t) {
    this.widget && (this.widget.extentToValidate = t);
  }
  utilityNetworkWatcher(t) {
    this.widget && t && (this.widget.utilityNetwork = t);
  }
  positionWatcher(t) {
    t !== void 0 && this.widget && this.el.childElem && this.view.ui?.move(this.el.childElem, t);
  }
  viewWatcher(t) {
    t !== void 0 && this.widget && (this.widget.view = t, this._loadUtilityNetwork());
  }
  _addContainer() {
    this.widget.container = this.el.childElem;
  }
  _createParams() {
    const t = {};
    return this.extentToValidate !== void 0 && (t.extentToValidate = this.extentToValidate), this.utilityNetwork !== void 0 && (t.utilityNetwork = this.utilityNetwork), t;
  }
  async _loadUtilityNetwork() {
    if (this.view?.map && this.view.map.portalItem) {
      await this.view.map.load();
      const t = this.view.map.utilityNetworks?.getItemAt(0);
      await t?.load(), this.utilityNetwork = t;
    }
  }
  _setChildElement(t) {
    this.el.childElem = t;
  }
  // #endregion
  // #region Rendering
  render() {
    return (0,lit__WEBPACK_IMPORTED_MODULE_5__.html)`<div ${(0,lit_html_directives_ref_js__WEBPACK_IMPORTED_MODULE_1__.ref)(this._setChildElement)}></div>`;
  }
}
(0,_chunks_runtime_js__WEBPACK_IMPORTED_MODULE_0__.c)("arcgis-utility-network-validate-topology", m);



/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,