"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_arcgis_map-components_dist_components_arcgis-map_customElement_js"],{

/***/ "./node_modules/@arcgis/map-components/dist/components/arcgis-map/customElement.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/components/arcgis-map/customElement.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ArcgisMap: () => (/* binding */ b)
/* harmony export */ });
/* harmony import */ var _chunks_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../chunks/runtime.js */ "./node_modules/@arcgis/map-components/dist/chunks/runtime.js");
/* harmony import */ var _arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @arcgis/components-controllers/accessor */ "./node_modules/@arcgis/components-controllers/dist/accessor/index.js");
/* harmony import */ var _arcgis_core_core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @arcgis/core/core/reactiveUtils.js */ "@arcgis/core/core/reactiveUtils.js");
/* harmony import */ var _arcgis_core_views_MapView_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @arcgis/core/views/MapView.js */ "@arcgis/core/views/MapView.js");
/* harmony import */ var _arcgis_core_WebMap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @arcgis/core/WebMap.js */ "@arcgis/core/WebMap.js");
/* harmony import */ var _arcgis_lumina__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @arcgis/lumina */ "./node_modules/@arcgis/lumina/dist/index.js");
/* harmony import */ var _chunks_component_utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../chunks/component-utils.js */ "./node_modules/@arcgis/map-components/dist/chunks/component-utils.js");
/* harmony import */ var _lit_reactive_element_css_tag_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @lit/reactive-element/css-tag.js */ "./node_modules/@lit/reactive-element/development/css-tag.js");








/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
v4.32.1 */
const u = (0,_lit_reactive_element_css_tag_js__WEBPACK_IMPORTED_MODULE_7__.css)`@layer{arcgis-map{display:block;height:100%;.esri-view{height:100%;width:100%}}}`, f = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.makeAccessorController)(
  _arcgis_core_WebMap_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  /**
   * Since omitProps is only needed for typing, not runtime, `{} as { ... }` is
   * a hack to remove them from the runtime code. This argument is not used at
   * all at runtime. For makeViewModelController and makeWidgetController, the
   * minifier is able to remove them automatically. However, minifier does not
   * remove them for makeAccessorController as makeAccessorController is defined
   * in an externalized package.
   */
  {}
), _ = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.makeAccessorController)(_arcgis_core_views_MapView_js__WEBPACK_IMPORTED_MODULE_3__["default"], {});
class b extends _arcgis_lumina__WEBPACK_IMPORTED_MODULE_5__.LitElement {
  constructor() {
    super(...arguments), this._center = void 0, this._extent = void 0, this._itemId = void 0, this._scale = void 0, this._viewpoint = void 0, this._zoom = void 0, this._map = f(this, { editConstructorProperties: this._editMapProperties }), this.view = _(this, { editConstructorProperties: this._editViewProperties }), this.allLayerViews = this.view.allLayerViews, this.autoDestroyDisabled = !1, this.background = this.view.background, this.basemap = this._map.basemap, this.basemapView = this.view.basemapView, this.constraints = this.view.constraints, this.displayFilterDisabled = this.view.displayFilterEnabled, this.fatalError = this.view.fatalError, this.floors = this.view.floors, this.graphics = this.view.graphics, this.ground = this._map.ground, this.highlights = this.view.highlights, this.highlightOptions = this.view.highlightOptions, this.ipsInfo = this._map.ipsInfo, this.layerViews = this.view.layerViews, this.magnifier = this.view.magnifier, this.map = this.view.map, this.navigation = this.view.navigation, this.padding = this.view.padding, this.popup = this.view.popup, this.popupDisabled = this.view.popupEnabled, this.ready = this.view.ready, this.resizeAlign = this.view.resizeAlign, this.resolution = this.view.resolution, this.rotation = this.view.rotation, this.spatialReference = this.view.spatialReference, this.suspended = this.view.suspended, this.theme = this.view.theme, this.timeExtent = this.view.timeExtent, this.timeZone = this.view.timeZone, this.updating = this.view.updating, this.arcgisViewChange = (0,_arcgis_lumina__WEBPACK_IMPORTED_MODULE_5__.createEvent)(), this.arcgisViewClick = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.reEmitEvent)(() => this.view, "click"), this.arcgisViewDoubleClick = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.reEmitEvent)(() => this.view, "double-click"), this.arcgisViewDrag = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.reEmitEvent)(() => this.view, "drag"), this.arcgisViewHold = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.reEmitEvent)(() => this.view, "hold"), this.arcgisViewImmediateClick = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.reEmitEvent)(() => this.view, "immediate-click"), this.arcgisViewImmediateDoubleClick = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.reEmitEvent)(() => this.view, "immediate-double-click"), this.arcgisViewKeyDown = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.reEmitEvent)(() => this.view, "key-down"), this.arcgisViewKeyUp = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.reEmitEvent)(() => this.view, "key-up"), this.arcgisViewLayerviewCreate = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.reEmitEvent)(() => this.view, "layerview-create"), this.arcgisViewLayerviewCreateError = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.reEmitEvent)(() => this.view, "layerview-create-error"), this.arcgisViewLayerviewDestroy = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.reEmitEvent)(() => this.view, "layerview-destroy"), this.arcgisViewMouseWheel = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.reEmitEvent)(() => this.view, "mouse-wheel"), this.arcgisViewPointerDown = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.reEmitEvent)(() => this.view, "pointer-down"), this.arcgisViewPointerEnter = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.reEmitEvent)(() => this.view, "pointer-enter"), this.arcgisViewPointerLeave = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.reEmitEvent)(() => this.view, "pointer-leave"), this.arcgisViewPointerMove = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.reEmitEvent)(() => this.view, "pointer-move"), this.arcgisViewPointerUp = (0,_arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.reEmitEvent)(() => this.view, "pointer-up"), this.arcgisViewReadyChange = (0,_arcgis_lumina__WEBPACK_IMPORTED_MODULE_5__.createEvent)();
  }
  static {
    this.properties = { _map: 16, view: 32, allLayerViews: 0, autoDestroyDisabled: 5, background: 0, basemap: 1, basemapView: 0, center: 1, constraints: 0, displayFilterDisabled: 5, extent: 0, fatalError: 0, floors: 0, gamepad: 32, graphics: 0, ground: 1, highlights: 0, highlightOptions: 0, interacting: 32, ipsInfo: 0, itemId: 3, layerViews: 0, magnifier: 0, map: 0, navigating: 32, navigation: 0, padding: 0, popup: 0, popupDisabled: 5, ready: 4, resizeAlign: 1, resolution: 8, rotation: 9, scale: 9, spatialReference: 0, stationary: 32, suspended: 7, theme: 0, timeExtent: 0, timeZone: 1, updating: 7, viewpoint: 0, zoom: 9 };
  }
  static {
    this.shadowRootOptions = _arcgis_lumina__WEBPACK_IMPORTED_MODULE_5__.noShadowRoot;
  }
  static {
    this.styles = u;
  }
  /**
   * Represents the view's center point; when setting the center, you may pass a
   * esri/geometry/Point instance or a string representing
   * a longitude/latitude pair (`"-100.4593, 36.9014"`).
   * Setting the center immediately changes the current view.
   * For animating the view, see this component's goTo() method.
   */
  get center() {
    return this.view.center ?? this._center;
  }
  set center(i) {
    const t = (0,_chunks_component_utils_js__WEBPACK_IMPORTED_MODULE_6__.e)(i, this.ready ? this.view : void 0);
    t && (this.ready && (this.view.center = t), this._center = t);
  }
  /**
   * The extent represents the visible portion of a map within the view as an instance of esri/geometry/Extent.
   * Setting the extent immediately changes the view without animation. To animate
   * the view, see this component's goTo() method.
   * When the view is rotated, the extent does not update to include the newly visible portions of the map.
   */
  get extent() {
    return this.view.extent ?? this._extent;
  }
  set extent(i) {
    this.view.ready || (this._extent = i), i && !this.extent?.equals(i) && (this.view.extent = i);
  }
  /** Gamepad input specific configuration settings. */
  get gamepad() {
    return this.ready ? this.view.input.gamepad : void 0;
  }
  /** Indication whether the view is being interacted with (for example when panning or by an interactive tool). */
  get interacting() {
    return this.view.interacting;
  }
  /** The ID of a WebMap from ArcGIS Online or ArcGIS Enterprise portal.
   *
   * To configure the portal url you must set the [`portalUrl` property on `config`](https://developers.arcgis.com/javascript/latest/api-reference/esri-config.html#portalUrl) before the `arcgis-map` component loads.
   */
  get itemId() {
    return this._map.portalItem?.id ?? this._itemId;
  }
  set itemId(i) {
    this._itemId = i, this.ready && _arcgis_components_controllers_accessor__WEBPACK_IMPORTED_MODULE_1__.accessorSupport.reCreate(this._map, this).then(() => {
      this.view.map = this._map;
    }).catch(console.error);
  }
  /** Indication whether the view is being navigated (for example when panning). */
  get navigating() {
    return this.view.navigating;
  }
  /**
   * Represents the map scale at the center of the view. Setting the scale immediately changes the view. For animating
   * the view, see this component's goTo() method.
   */
  get scale() {
    return this.view.scale ?? this._scale;
  }
  set scale(i) {
    this.ready && (this.view.scale = i), this._scale = i;
  }
  /** Indication whether the view is animating, being navigated with or resizing. */
  get stationary() {
    return this.view.stationary;
  }
  /**
   * Represents the current view as a Viewpoint or point of observation on the view.
   * Setting the viewpoint immediately changes the current view. For animating
   * the view, see this component's goTo() method.
   */
  get viewpoint() {
    return this.view.viewpoint ?? this._viewpoint;
  }
  set viewpoint(i) {
    this.ready && (0,_chunks_component_utils_js__WEBPACK_IMPORTED_MODULE_6__.i)(this.viewpoint, i) && (this.view.viewpoint = i), this._viewpoint = i;
  }
  /**
   * Represents the level of detail (LOD) at the center of the view.
   * A zoom level (or scale) is a number that defines how large or small the contents of a map appear in a map view.
   * Zoom level is a number usually between 0 (global view) and 23 (very detailed view) and is used as a shorthand for predetermined scale values.
   * A value of -1 means the view has no LODs.
   * When setting the zoom value, the MapView converts it to the corresponding scale, or interpolates it if the zoom is a fractional number.
   * MapView can display maps with different projections at a full range of scales, and so use the scale property on this component rather than zoom level.
   *
   * Setting the zoom immediately changes the current view. For animating the view, see this component's goTo() method.
   * Setting this property in conjunction with `center` is a convenient way to set the initial extent of the view.
   */
  get zoom() {
    return this.view.zoom ?? this._zoom;
  }
  set zoom(i) {
    this.ready && (this.view.zoom = i), this._zoom = i;
  }
  //#endregion
  //#region Public Methods
  /** Adds a layer to the map layers collection. */
  async addLayer(i, t) {
    this.map?.add(i, t);
  }
  /** Adds a layer or array of layers to the map layers collection. */
  async addLayers(i, t) {
    this.map?.addMany(i, t);
  }
  /** Adds a table to the map tables collection. */
  async addTable(i) {
    this.map?.tables.add(i);
  }
  /** Adds a table or array of tables to the map tables collection. */
  async addTables(i, t) {
    this.map?.tables.addMany(i, t);
  }
  /** Closes the popup. */
  async closePopup() {
    this.view?.closePopup();
  }
  /** Destroys the view, and any associated resources, including its map, popup, and UI elements. */
  async destroy() {
    await this.manager.destroy();
  }
  /** Sets the view to a given target. */
  async goTo(i, t) {
    return await this.view?.goTo(i, t);
  }
  /** Returns hit test results from each layer that intersects the specified screen coordinates. */
  async hitTest(i, t) {
    return await this.view?.hitTest(i, t);
  }
  /**
   * Opens the popup at the given location with content defined either explicitly with content or driven
   * from the PopupTemplate of input features.
   */
  async openPopup(i) {
    await this.view?.openPopup(i);
  }
  /** Create a screenshot of the current view. */
  async takeScreenshot(i) {
    return await this.view?.takeScreenshot(i);
  }
  toMap(i) {
    return this.view.toMap(i);
  }
  toScreen(i, t) {
    return this.view.toScreen(i, t);
  }
  /** Call this method to clear any fatal errors resulting from a lost WebGL context. */
  async tryFatalErrorRecovery() {
    this.view?.tryFatalErrorRecovery();
  }
  /** Gets the LayerView created on the view for the given layer. */
  async whenLayerView(i) {
    return await this.view?.whenLayerView(i);
  }
  //#endregion
  //#region Lifecycle
  load() {
    this.el.childElem = document.createElement("div"), this.el.append(this.el.childElem), this.view.container ??= this.el.childElem;
  }
  loaded() {
    this.manager.onLifecycle(() => [
      (0,_arcgis_core_core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_2__.watch)(() => this.view.stationary, () => {
        this.arcgisViewChange.emit();
      }, { initial: !0 }),
      (0,_arcgis_core_core_reactiveUtils_js__WEBPACK_IMPORTED_MODULE_2__.watch)(() => this.view.ready, () => this.arcgisViewReadyChange.emit(), { initial: this.view.ready })
    ]);
  }
  //#endregion
  //#region Private Methods
  _editMapProperties(i) {
    this.map && (this._map = this.map), this.itemId && (i.portalItem = { id: this.itemId });
    const { basemap: t, ...o } = i;
    t || (i = o);
    const { ground: n, ...w } = i;
    return n || (i = w), i;
  }
  async _editViewProperties(i) {
    await this.manager.use(this._map), this.view.ui || (i.ui = {
      components: ["attribution"]
    }), i.map ??= this._map;
    const t = (0,_chunks_component_utils_js__WEBPACK_IMPORTED_MODULE_6__.e)(this.center, void 0);
    return t && (i.center = t), this.viewpoint && (i.viewpoint = this.viewpoint), this.scale !== void 0 && (i.scale = this.scale), this.extent && (i.extent = this.extent), this.zoom !== void 0 && (i.zoom = this.zoom), i;
  }
}
(0,_chunks_runtime_js__WEBPACK_IMPORTED_MODULE_0__.c)("arcgis-map", b);



/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,