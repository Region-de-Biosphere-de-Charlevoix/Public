"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["node_modules_arcgis_map-components_dist_components_arcgis-version-management-service-item_cus-7c3f96"],{

/***/ "./node_modules/@arcgis/map-components/dist/components/arcgis-version-management-service-item/customElement.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/components/arcgis-version-management-service-item/customElement.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ArcgisVersionManagementServiceItem: () => (/* binding */ y)
/* harmony export */ });
/* harmony import */ var _chunks_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../chunks/runtime.js */ "./node_modules/@arcgis/map-components/dist/chunks/runtime.js");
/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit-html */ "./node_modules/lit-html/development/lit-html.js");
/* harmony import */ var _arcgis_lumina__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @arcgis/lumina */ "./node_modules/@arcgis/lumina/dist/index.js");



/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
v4.32.1 */
class y extends _arcgis_lumina__WEBPACK_IMPORTED_MODULE_2__.LitElement {
  constructor() {
    super(...arguments), this._arcgisGetVersions = (e) => {
      this.arcgisGetVersions.emit(e.detail);
    }, this._arcgisManageVersion = (e) => {
      this.arcgisManageVersion.emit(e.detail);
    }, this._arcgisNewVersion = (e) => {
      this.arcgisNewVersion.emit(e.detail);
    }, this._versionListEventListeners = /* @__PURE__ */ new Map(), this._showInvalidVersionNotice = !0, this.arcgisFlowItemBack = (0,_arcgis_lumina__WEBPACK_IMPORTED_MODULE_2__.createEvent)(), this.arcgisFlowItemClose = (0,_arcgis_lumina__WEBPACK_IMPORTED_MODULE_2__.createEvent)(), this.arcgisGetVersions = (0,_arcgis_lumina__WEBPACK_IMPORTED_MODULE_2__.createEvent)(), this.arcgisManageVersion = (0,_arcgis_lumina__WEBPACK_IMPORTED_MODULE_2__.createEvent)(), this.arcgisNewVersion = (0,_arcgis_lumina__WEBPACK_IMPORTED_MODULE_2__.createEvent)(), this.arcgisCreateVersionList = (0,_arcgis_lumina__WEBPACK_IMPORTED_MODULE_2__.createEvent)();
  }
  static {
    this.properties = { _showInvalidVersionNotice: 16, serviceItemElementProps: 0 };
  }
  static {
    this.shadowRootOptions = _arcgis_lumina__WEBPACK_IMPORTED_MODULE_2__.noShadowRoot;
  }
  // #endregion
  // #region Lifecycle
  disconnectedCallback() {
    super.disconnectedCallback(), this._versionList && this._removeVersionListEventListeners(this._versionList);
  }
  // #endregion
  // #region Private Methods
  _addVersionListEventListeners(e) {
    e.addEventListener("arcgisGetVersions", this._arcgisGetVersions), this._versionListEventListeners.set("arcgisGetVersions", this._arcgisGetVersions), e.addEventListener("arcgisManageVersion", this._arcgisManageVersion), this._versionListEventListeners.set("arcgisManageVersion", this._arcgisManageVersion), e.addEventListener("arcgisNewVersion", this._arcgisNewVersion), this._versionListEventListeners.set("arcgisNewVersion", this._arcgisNewVersion);
  }
  _removeVersionListEventListeners(e) {
    for (const [c, l] of this._versionListEventListeners)
      e.removeEventListener(c, l);
  }
  // #endregion
  // #region Rendering
  render() {
    const { serviceItemElementProps: { allowEditing: e, closable: c, currentUser: l, executionError: h, currentVersionIdentifier: d, flowElement: V, hasAdvEditingUte: p, heading: L, isInitialVersionInvalid: E, isVersionAdministrator: _, isVersioningApiAvailable: b, mode: w, pageSize: I, serviceName: o, serviceUrl: g, state: u, strings: r, versionInfos: a } } = this;
    let { _versionList: i } = this;
    const f = E.get(g) && this._showInvalidVersionNotice ? (0,lit_html__WEBPACK_IMPORTED_MODULE_1__.html)`<calcite-notice class="initial-version-invalid-block" closable kind=warning open scale=s width=full icon @calciteNoticeClose=${() => this._showInvalidVersionNotice = !1}><div slot=title>${r.headers.invalidInitialVersion}</div><div slot=message>${r.loadErrors.invalidInitialVersion}</div></calcite-notice>` : void 0, $ = (0,lit_html__WEBPACK_IMPORTED_MODULE_1__.html)`<calcite-combobox clear-disabled .label=${o} max-items=5 overlay-positioning=fixed selection-mode=single-persist @calciteComboboxChange=${(s) => {
      const x = s.target, M = a.find((N) => N.versionIdentifier.guid === x.value);
      this.arcgisManageVersion.emit({ actionType: "changeVersion", serviceUrl: g, versionInfo: M });
    }}>${a ? a.map((s) => (0,lit_html__WEBPACK_IMPORTED_MODULE_1__.html)`<calcite-combobox-item class=${(0,_arcgis_lumina__WEBPACK_IMPORTED_MODULE_2__.safeClassMap)(w === "dialog" ? "" : "calcite-combobox-item")} .selected=${d.guid === s.versionIdentifier.guid && d.name === s.versionIdentifier.name} .textLabel=${s.versionIdentifier.name} .value=${s.versionIdentifier.guid}></calcite-combobox-item>`) : void 0}</calcite-combobox>`;
    let m, v;
    return e && (m = (0,lit_html__WEBPACK_IMPORTED_MODULE_1__.html)`<calcite-action .id=${`actionManageVersions_${o}`} icon=list scale=s slot=control text @click=${async () => {
      i = document.createElement("arcgis-version-management-version-list"), i.versionListElementProps = {
        closable: c,
        currentUser: l,
        currentVersionIdentifier: d,
        executionError: h,
        hasAdvEditingUte: p,
        heading: L,
        isVersionAdministrator: _,
        isVersioningApiAvailable: b,
        pageSize: I,
        serviceName: o,
        serviceUrl: g,
        state: u,
        strings: r,
        versionInfos: a
      }, i.selected = !0, i.showBackButton = !0, i.addEventListener("calciteFlowItemBack", (s) => {
        s.preventDefault(), this.arcgisFlowItemBack.emit();
      }), i.addEventListener("calciteFlowItemClose", () => {
        this.arcgisFlowItemClose.emit();
      }), this._addVersionListEventListeners(i), V?.append(i), this.arcgisCreateVersionList.emit(i);
    }}></calcite-action>`, v = (0,lit_html__WEBPACK_IMPORTED_MODULE_1__.html)`<calcite-tooltip overlay-positioning=fixed .referenceElement=${`actionManageVersions_${o}`}><span>${r.headers.manageVersions}</span></calcite-tooltip>`), (0,lit_html__WEBPACK_IMPORTED_MODULE_1__.html)`<calcite-block open .heading=${o}>${f}${$}${m}${v}</calcite-block>`;
  }
}
(0,_chunks_runtime_js__WEBPACK_IMPORTED_MODULE_0__.c)("arcgis-version-management-service-item", y);



/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,