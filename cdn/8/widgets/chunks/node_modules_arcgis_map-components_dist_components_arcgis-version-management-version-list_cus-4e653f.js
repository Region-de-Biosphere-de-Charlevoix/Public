"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["node_modules_arcgis_map-components_dist_components_arcgis-version-management-version-list_cus-4e653f"],{

/***/ "./node_modules/@arcgis/map-components/dist/components/arcgis-version-management-version-list/customElement.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@arcgis/map-components/dist/components/arcgis-version-management-version-list/customElement.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ArcgisVersionManagementVersionList: () => (/* binding */ N)
/* harmony export */ });
/* harmony import */ var _chunks_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../chunks/runtime.js */ "./node_modules/@arcgis/map-components/dist/chunks/runtime.js");
/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit */ "./node_modules/lit/index.js");
/* harmony import */ var lit_html_directives_ref_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit-html/directives/ref.js */ "./node_modules/lit-html/development/directives/ref.js");
/* harmony import */ var _arcgis_lumina__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @arcgis/lumina */ "./node_modules/@arcgis/lumina/dist/index.js");
/* harmony import */ var _lit_reactive_element_css_tag_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @lit/reactive-element/css-tag.js */ "./node_modules/@lit/reactive-element/development/css-tag.js");





/*! All material copyright Esri, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.32/esri/copyright.txt for details.
v4.32.1 */
const A = (0,_lit_reactive_element_css_tag_js__WEBPACK_IMPORTED_MODULE_4__.css)`:host{display:none;background:#bdf2c4}:host([selected]){display:flex}calcite-block{margin-block:0}calcite-pagination{justify-content:center}`;
class N extends _arcgis_lumina__WEBPACK_IMPORTED_MODULE_3__.LitElement {
  constructor() {
    super(...arguments), this._filterInputElement = (0,lit_html_directives_ref_js__WEBPACK_IMPORTED_MODULE_2__.createRef)(), this._flowItemElement = (0,lit_html_directives_ref_js__WEBPACK_IMPORTED_MODULE_2__.createRef)(), this.currentPage = 1, this.selected = !1, this.showBackButton = !1, this.arcgisGetVersions = (0,_arcgis_lumina__WEBPACK_IMPORTED_MODULE_3__.createEvent)(), this.arcgisManageVersion = (0,_arcgis_lumina__WEBPACK_IMPORTED_MODULE_3__.createEvent)(), this.arcgisNewVersion = (0,_arcgis_lumina__WEBPACK_IMPORTED_MODULE_3__.createEvent)();
  }
  static {
    this.properties = { _filteredVersionInfos: 16, currentPage: 11, selected: 7, showBackButton: 7, versionListElementProps: 0 };
  }
  static {
    this.styles = A;
  }
  //#endregion
  //#region Lifecycle
  load() {
    this._filteredVersionInfos = this.versionListElementProps.versionInfos;
  }
  willUpdate(e) {
    if (e.has("versionListElementProps")) {
      const t = e.get("versionListElementProps"), i = this.versionListElementProps;
      t?.versionInfos !== i.versionInfos && (this._filteredVersionInfos = i.versionInfos, this._filterInputElement.value && this._handleFilterChange());
    }
  }
  updated() {
    this._filterInputElement.value?.setFocus();
  }
  //#endregion
  //#region Private Methods
  async setFocus() {
    this._flowItemElement.value?.setFocus();
  }
  // eslint-disable-next-line @typescript-eslint/no-empty-function
  goBack() {
  }
  _handleFilterChange() {
    const { versionListElementProps: { versionInfos: e } } = this, t = this._filterInputElement.value.value.toUpperCase();
    this._filteredVersionInfos = t === "" ? e : e.filter((i) => i.versionIdentifier.name.toUpperCase().includes(t) || i.versionIdentifier.guid.toUpperCase().includes(t)), this._filteredVersionInfos.length && (this.currentPage = 1);
  }
  _handleNoticeClosed() {
    this.versionListElementProps = {
      ...this.versionListElementProps,
      executionError: void 0
    };
  }
  _handlePaginationChange(e) {
    this.currentPage = e.target.startItem;
  }
  _getExecutionError(e) {
    const { versionListElementProps: { strings: { executionErrors: t } } } = this;
    switch (e) {
      case "no-advanced-editing-user-type-extension":
        return t.noAdvancedEditingUserTypeExtension;
      case "no-feature-service-found":
        return t.noFeatureServiceFound;
      case "no-valid-enterprise-version":
        return t.notValidEnterpriseVersion;
      case "no-valid-version-name":
        return t.invalidVersionName;
      default:
        return e;
    }
  }
  _paginate(e, t, i) {
    return e.slice((i - 1) * t, i * t);
  }
  //#endregion
  //#region Rendering
  render() {
    const { currentPage: e, selected: t, showBackButton: i, versionListElementProps: { closable: m, currentUser: u, currentVersionIdentifier: l, executionError: c, hasAdvEditingUte: h, heading: v, isVersionAdministrator: V, isVersioningApiAvailable: d, pageSize: o, serviceName: I, serviceUrl: r, state: E, strings: { headers: f }, strings: n, versionInfos: $ } } = this, _ = (0,lit__WEBPACK_IMPORTED_MODULE_1__.html)`<calcite-block .heading=${f.currentVersion} .description=${l.name} overlay-positioning=fixed></calcite-block>`, P = (0,lit__WEBPACK_IMPORTED_MODULE_1__.html)`<calcite-action id=actionRefreshVersions icon=refresh text @click=${() => {
      this.arcgisGetVersions.emit({
        serviceUrl: r
      });
    }} slot=header-actions-end><calcite-tooltip overlay-positioning=fixed reference-element=actionRefreshVersions><span>${n.actions.refreshVersions}</span></calcite-tooltip></calcite-action>`;
    this._paginatedVersionInfos = this._filteredVersionInfos.length > o ? this._paginate(this._filteredVersionInfos, o, e) : this._filteredVersionInfos;
    const x = this._filteredVersionInfos.length > o ? (0,lit__WEBPACK_IMPORTED_MODULE_1__.html)`<calcite-pagination @calcitePaginationChange=${this._handlePaginationChange} page-size=1 .startItem=${e} .totalItems=${Math.ceil(this._filteredVersionInfos.length / o)}></calcite-pagination>` : void 0, b = this._paginate(this._paginatedVersionInfos, o, 1).map((B) => (0,lit__WEBPACK_IMPORTED_MODULE_1__.html)`<arcgis-version-management-version-item .versionItemElementProps=${{
      currentUser: u,
      currentVersionIdentifier: l,
      isCurrentVersionCard: !1,
      hasAdvEditingUte: h,
      isVersionAdministrator: V,
      isVersioningApiAvailable: d,
      serviceUrl: r,
      strings: n,
      versionInfo: B
    }}></arcgis-version-management-version-item>`), w = $.length > o ? (0,lit__WEBPACK_IMPORTED_MODULE_1__.html)`<calcite-block heading .label=${f.filterVersions} open><calcite-input-text clearable icon=search @calciteInputTextInput=${this._handleFilterChange} .placeholder=${n.actions.searchVersions} ${(0,lit_html_directives_ref_js__WEBPACK_IMPORTED_MODULE_2__.ref)(this._filterInputElement)}></calcite-input-text></calcite-block>` : void 0, k = (0,lit__WEBPACK_IMPORTED_MODULE_1__.html)`<calcite-list .label=${n.headers.manageVersions}>${b}</calcite-list>`, C = d && h ? (0,lit__WEBPACK_IMPORTED_MODULE_1__.html)`<calcite-fab appearance=outline-fill slot=fab text-enabled .text=${n.actions.newVersion} @click=${() => {
      this.arcgisNewVersion.emit({
        serviceUrl: r
      });
    }}></calcite-fab>` : void 0, L = c ? (0,lit__WEBPACK_IMPORTED_MODULE_1__.html)`<calcite-notice @calciteNoticeClose=${this._handleNoticeClosed} class="notice" closable kind=warning open scale=s slot=footer width=full><div slot=message>${this._getExecutionError(c)}</div></calcite-notice>` : void 0;
    return (0,lit__WEBPACK_IMPORTED_MODULE_1__.html)`<calcite-flow-item .closable=${m} .description=${I} .heading=${v} .selected=${t} .showBackButton=${i} ${(0,lit_html_directives_ref_js__WEBPACK_IMPORTED_MODULE_2__.ref)(this._flowItemElement)}><calcite-panel .loading=${E === "executing"}>${_}<calcite-panel .heading=${this._filteredVersionInfos.length ? `${n.headers.manageVersions} (${this._filteredVersionInfos.length})` : n.headers.manageVersions}>${P}${w}${k}${C}</calcite-panel>${x}${L}</calcite-panel></calcite-flow-item>`;
  }
}
(0,_chunks_runtime_js__WEBPACK_IMPORTED_MODULE_0__.c)("arcgis-version-management-version-list", N);



/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,